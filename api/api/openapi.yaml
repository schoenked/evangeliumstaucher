openapi: 3.0.1
info:
  contact:
    name: support@api.bible
  description: ""
  termsOfService: http://api.bible/terms/
  title: API.Bible
  version: 1.6.3
servers:
- url: https://api.scripture.api.bible/
security:
- ApiKeyAuth: []
tags:
- description: Fetch Bibles and metadata
  name: Bibles
- description: Fetch Books for a Bible
  name: Books
- description: Fetch Chapters for a Bible
  name: Chapters
- description: Fetch Sections for a Bible (Experimental)
  name: Sections
- description: Fetch a Passage for a Bible
  name: Passages
- description: Fetch Verses for a Bible
  name: Verses
- description: Search by keyword or reference
  name: Search
- description: Fetch Audio Bibles and metadata
  name: Audio Bibles
- description: Fetch Books for a Audio Bible
  name: Audio Books
- description: Fetch Chapters for a Audio Bible
  name: Audio Chapters
paths:
  /v1/bibles:
    get:
      description: |
        Gets an array of `Bible` objects authorized for current API Key
      operationId: getBibles
      parameters:
      - description: ISO 639-3 three digit language code used to filter results
        in: query
        name: language
        schema:
          type: string
      - description: Bible abbreviation to search for
        in: query
        name: abbreviation
        schema:
          type: string
      - description: Bible name to search for
        in: query
        name: name
        schema:
          type: string
      - description: Comma separated list of Bible Ids to return
        in: query
        name: ids
        schema:
          type: string
      - description: Boolean to include full Bible details (e.g. copyright and promo
          info)
        in: query
        name: include-full-details
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful response
        "400":
          content: {}
          description: Not authorized to retrieve any Bibles or invalid language_code
            provided
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Key provided.
      tags:
      - Bibles
      x-accepts: '*/*'
  /v1/bibles/{bibleId}:
    get:
      description: |
        Gets a single `Bible` for a given `bibleId`
      operationId: getBible
      parameters:
      - description: Id of Bible to be fetched
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve this Bible
        "404":
          content: {}
          description: Bible not found
      tags:
      - Bibles
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/books:
    get:
      description: |
        Gets an array of `Book` objects for a given `bibleId`
      operationId: getBooks
      parameters:
      - description: Id of Bible whose Book to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: |
          Boolean indicating if an array of chapter summaries should be
          included in the results. Defaults to false.
        in: query
        name: include-chapters
        schema:
          type: boolean
      - description: |
          Boolean indicating if an array of chapter summaries and an array
          of sections should be included in the results. Defaults to false.
        in: query
        name: include-chapters-and-sections
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Books for this Bible
      tags:
      - Books
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/books/{bookId}:
    get:
      description: |
        Gets a single `Book` object for a given `bibleId` and `bookId`
      operationId: getBook
      parameters:
      - description: Id of Bible whose Book to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Book to fetch
        in: path
        name: bookId
        required: true
        schema:
          type: string
      - description: |
          Boolean indicating if an array of chapter summaries should be
          included in the results. Defaults to false.
        in: query
        name: include-chapters
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Books for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Books
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/books/{bookId}/chapters:
    get:
      description: |
        Gets an array of `Chapter` objects for a given `bibleId` and `bookId`
      operationId: getChapters
      parameters:
      - description: Id of Bible whose Chapters to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Book whose Chapters to fetch
        in: path
        name: bookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Chapters for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Chapters
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/chapters/{chapterId}:
    get:
      description: |
        Gets a single `Chapter` object for a given `bibleId` and `chapterId`.
        This Chapter object also includes an `content` property with all verses for the Chapter.
      operationId: getChapter
      parameters:
      - description: Id of Bible whose Chapter to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Chapter to fetch
        in: path
        name: chapterId
        required: true
        schema:
          type: string
      - description: Content type to be returned in the content property.  Supported
          values are `html` (default), `json` (beta), and `text` (beta)
        in: query
        name: content-type
        schema:
          default: html
          enum:
          - html
          - json
          - text
          type: string
      - description: Include footnotes in content
        in: query
        name: include-notes
        schema:
          default: false
          type: boolean
      - description: Include section titles in content
        in: query
        name: include-titles
        schema:
          default: true
          type: boolean
      - description: Include chapter numbers in content
        in: query
        name: include-chapter-numbers
        schema:
          default: false
          type: boolean
      - description: Include verse numbers in content.
        in: query
        name: include-verse-numbers
        schema:
          default: true
          type: boolean
      - description: Include spans that wrap verse numbers and verse text for bible
          content.
        in: query
        name: include-verse-spans
        schema:
          default: false
          type: boolean
      - description: Comma delimited list of bibleIds to include
        in: query
        name: parallels
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Chapters for this Bible
        "404":
          content: {}
          description: Chapter not found
      tags:
      - Chapters
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/passages/{passageId}:
    get:
      description: |
        Gets a `Passage` object for a given `bibleId` and `passageId`. This
        Passage object also includes an `content` property with all verses
        corresponding to the passageId.
        The `passageId` parameter can represent a chapter, verse, or range of verses.
      operationId: getPassage
      parameters:
      - description: Id of Bible for passage
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: String reference id for the requested passage.
        in: path
        name: passageId
        required: true
        schema:
          type: string
      - description: Content type to be returned in the content property.  Supported
          values are `html` (default), `json` (beta), and `text` (beta)
        in: query
        name: content-type
        schema:
          default: html
          enum:
          - html
          - json
          - text
          type: string
      - description: Include footnotes in content
        in: query
        name: include-notes
        schema:
          default: false
          type: boolean
      - description: Include section titles in content
        in: query
        name: include-titles
        schema:
          default: true
          type: boolean
      - description: Include chapter numbers in content
        in: query
        name: include-chapter-numbers
        schema:
          default: false
          type: boolean
      - description: Include verse numbers in content.
        in: query
        name: include-verse-numbers
        schema:
          default: true
          type: boolean
      - description: Include spans that wrap verse numbers and verse text for bible
          content.
        in: query
        name: include-verse-spans
        schema:
          default: false
          type: boolean
      - description: Comma delimited list of bibleIds to include
        in: query
        name: parallels
        schema:
          type: string
      - description: Use the supplied id(s) to match the verseOrgId instead of the
          verseId
        in: query
        name: use-org-id
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Passage not found
      tags:
      - Passages
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/books/{bookId}/sections:
    get:
      description: |
        Gets an array of `Section` objects for a given `bibleId` and `bookId`
      operationId: getBookSections
      parameters:
      - description: Id of Bible whose Sections to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Book whose Sections to fetch
        in: path
        name: bookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Sections
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/chapters/{chapterId}/sections:
    get:
      description: |
        Gets an array of `Section` objects for a given `bibleId` and `chapterId`
      operationId: getChapterSections
      parameters:
      - description: Id of Bible whose Sections to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Chapter whose Sections to fetch
        in: path
        name: chapterId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Sections
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/sections/{sectionId}:
    get:
      description: |
        Gets a single `Section` object for a given `bibleId` and `sectionId`. This Section
        object also includes an `content` property with all verses for the Section.
      operationId: getSection
      parameters:
      - description: Id of Bible whose Section to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Section to fetch
        in: path
        name: sectionId
        required: true
        schema:
          type: string
      - description: Content type to be returned in the content property.  Supported
          values are `html` (default), `json` (beta), and `text` (beta)
        in: query
        name: content-type
        schema:
          default: html
          enum:
          - html
          - json
          - text
          type: string
      - description: Include footnotes in content
        in: query
        name: include-notes
        schema:
          default: false
          type: boolean
      - description: Include section titles in content
        in: query
        name: include-titles
        schema:
          default: true
          type: boolean
      - description: Include chapter numbers in content
        in: query
        name: include-chapter-numbers
        schema:
          default: false
          type: boolean
      - description: Include verse numbers in content.
        in: query
        name: include-verse-numbers
        schema:
          default: true
          type: boolean
      - description: Include spans that wrap verse numbers and verse text for bible
          content.
        in: query
        name: include-verse-spans
        schema:
          default: false
          type: boolean
      - description: Comma delimited list of bibleIds to include
        in: query
        name: parallels
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Section not found
      tags:
      - Sections
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/chapters/{chapterId}/verses:
    get:
      description: |
        Gets an array of `Verse` objects for a given `bibleId` and `chapterId`
      operationId: getVerses
      parameters:
      - description: Id of Bible whose Verses to fetch
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: Id of the Chapter whose Verses to fetch
        in: path
        name: chapterId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Verses
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/verses/{verseId}:
    get:
      description: |
        Gets a `Verse` object for a given `bibleId` and `verseId`. This
        Verse object also includes an `content` property with the verse
        corresponding to the verseId.
      operationId: getVerse
      parameters:
      - description: Id of Bible for passage
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: String reference id for the requested verse.
        in: path
        name: verseId
        required: true
        schema:
          type: string
      - description: Content type to be returned in the content property.  Supported
          values are `html` (default), `json` (beta), and `text` (beta)
        in: query
        name: content-type
        schema:
          default: html
          enum:
          - html
          - json
          - text
          type: string
      - description: Include footnotes in content
        in: query
        name: include-notes
        schema:
          default: false
          type: boolean
      - description: Include section titles in content
        in: query
        name: include-titles
        schema:
          default: true
          type: boolean
      - description: Include chapter numbers in content
        in: query
        name: include-chapter-numbers
        schema:
          default: false
          type: boolean
      - description: Include verse numbers in content.
        in: query
        name: include-verse-numbers
        schema:
          default: true
          type: boolean
      - description: Include spans that wrap verse numbers and verse text for bible
          content.
        in: query
        name: include-verse-spans
        schema:
          default: false
          type: boolean
      - description: Comma delimited list of bibleIds to include
        in: query
        name: parallels
        schema:
          type: string
      - description: Use the supplied id(s) to match the verseOrgId instead of the
          verseId
        in: query
        name: use-org-id
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Passage not found
      tags:
      - Verses
      x-accepts: '*/*'
  /v1/bibles/{bibleId}/search:
    get:
      description: |
        Gets search results for a given `bibleId` and query string.  Searches
        will match all verses with the list of keywords provided in the query string.
        Order of the keywords does not matter. However all keywords must be
        present in a verse for it to be considered a match.
        The total number of results returned from a search can be limited by populating the `limit`
        attribute in the query string with a non-negative integer value.  If no
        limit value is provide a default of 10 is used.
        `offset` can be used to traverse paginated results.  So for example if you are using
        the default `limit` of 10, using an `offset` of 10 will return the second page of results,
        namely results 11-20.
        The `text` property of each verse object contains only the verse text.  It does not
        contain footnote references. However, those can be queried directly using the
        `/bibles/{bibleId}/verses/{verseId}` endpoint.
      operationId: searchBible
      parameters:
      - description: Id of Bible to search
        in: path
        name: bibleId
        required: true
        schema:
          type: string
      - description: "Search keywords or passage reference.  Supported wildcards are\
          \ * and ?.  \nThe * wildcard matches any character sequence (e.g. searching\
          \ for \"wo*d\" finds text such as \"word\", \"world\", and \"worshipped\"\
          ).  \nThe ? wildcard matches any matches any single character (e.g. searching\
          \ for \"l?ve\" finds text such as \"live\" and \"love\").\n"
        in: query
        name: query
        schema:
          type: string
      - description: Integer limit for how many matching results to return. Default
          is 10.
        in: query
        name: limit
        schema:
          type: integer
      - description: Offset for search results. Used to paginate results
        in: query
        name: offset
        schema:
          type: integer
      - description: Sort order of results.  Supported values are `relevance` (default),
          `canonical` and `reverse-canonical`
        in: query
        name: sort
        schema:
          default: relevance
          enum:
          - relevance
          - canonical
          - reverse-canonical
          type: string
      - description: |
          One or more, comma seperated, passage ids (book, chapter, verse) which the search will be limited to.  (i.e. gen.1,gen.5 or gen-num or gen.1.1-gen.3.5)
        in: query
        name: range
        schema:
          type: string
      - description: |
          Sets the fuzziness of a search to account for misspellings. Values can be 0, 1, 2, or AUTO. Defaults to AUTO which varies depending on the
        in: query
        name: fuzziness
        schema:
          enum:
          - AUTO
          - "0"
          - "1"
          - "2"
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Sections for this Bible
        "404":
          content: {}
          description: Section not found
      tags:
      - Search
      x-accepts: '*/*'
  /v1/audio-bibles:
    get:
      description: |
        Gets an array of audio `Bible` objects authorized for current API Key
      operationId: getAudioBibles
      parameters:
      - description: ISO 639-3 three digit language code used to filter results
        in: query
        name: language
        schema:
          type: string
      - description: Bible abbreviation to search for
        in: query
        name: abbreviation
        schema:
          type: string
      - description: Bible name to search for
        in: query
        name: name
        schema:
          type: string
      - description: Comma separated list of Bible Ids to return
        in: query
        name: ids
        schema:
          type: string
      - description: bibleId of related text Bible used to filter audio bible results
        in: query
        name: bibleId
        schema:
          type: string
      - description: Boolean to include full Bible details (e.g. copyright and promo
          info)
        in: query
        name: include-full-details
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful response
        "400":
          content: {}
          description: Not authorized to retrieve any Bibles or invalid language_code
            provided
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Key provided.
      tags:
      - Bibles
      x-accepts: '*/*'
  /v1/audio-bibles/{audioBibleId}:
    get:
      description: |
        Gets a single audio `Bible` for a given `audioBibleId`
      operationId: getAudioBible
      parameters:
      - description: Id of audio Bible to be fetched
        in: path
        name: audioBibleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve this Bible
        "404":
          content: {}
          description: Bible not found
      tags:
      - Bibles
      x-accepts: '*/*'
  /v1/audio-bibles/{audioBibleId}/books:
    get:
      description: |
        Gets an array of `Book` objects for a given `audioBibleId`
      operationId: getAudioBooks
      parameters:
      - description: Id of audio Bible whose Book to fetch
        in: path
        name: audioBibleId
        required: true
        schema:
          type: string
      - description: |
          Boolean indicating if an array of chapter summaries should be
          included in the results. Defaults to false.
        in: query
        name: include-chapters
        schema:
          type: boolean
      - description: |
          Boolean indicating if an array of chapter summaries and an array
          of sections should be included in the results. Defaults to false.
        in: query
        name: include-chapters-and-sections
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Books for this Bible
      tags:
      - Books
      x-accepts: '*/*'
  /v1/audio-bibles/{audioBibleId}/books/{bookId}:
    get:
      description: |
        Gets a single `Book` object for a given `audioBibleId` and `bookId`
      operationId: getAudioBook
      parameters:
      - description: Id of audio Bible whose Book to fetch
        in: path
        name: audioBibleId
        required: true
        schema:
          type: string
      - description: Id of the Book to fetch
        in: path
        name: bookId
        required: true
        schema:
          type: string
      - description: |
          Boolean indicating if an array of chapter summaries should be
          included in the results. Defaults to false.
        in: query
        name: include-chapters
        schema:
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Books for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Books
      x-accepts: '*/*'
  /v1/audio-bibles/{audioBibleId}/books/{bookId}/chapters:
    get:
      description: |
        Gets an array of `Chapter` objects for a given `audioBibleId` and `bookId`
      operationId: getAudioChapters
      parameters:
      - description: Id of Bible whose Chapters to fetch
        in: path
        name: audioBibleId
        required: true
        schema:
          type: string
      - description: Id of the Book whose Chapters to fetch
        in: path
        name: bookId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Chapters for this Bible
        "404":
          content: {}
          description: Book not found
      tags:
      - Chapters
      x-accepts: '*/*'
  /v1/audio-bibles/{audioBibleId}/chapters/{chapterId}:
    get:
      description: |
        Gets a single `Chapter` object for a given `audioBibleId` and `chapterId`.
        This AudioChapter object also includes an `resourceUrl` property with a HTTP URL
        to the mp3 audio resource for the chapter.  The `resourceUrl` is unique per request
        and expires in XX minutes.  The `expiresAt` property provides the Unix time value of
        `resourceUrl` expiration.
      operationId: getAudioChapter
      parameters:
      - description: Id of Bible whose Chapter to fetch
        in: path
        name: audioBibleId
        required: true
        schema:
          type: string
      - description: Id of the Chapter to fetch
        in: path
        name: chapterId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: Successful response
        "400":
          content: {}
          description: Invalid ID supplied
        "401":
          content: {}
          description: Unauthorized for API access.  Missing or Invalid API Token
            provided.
        "403":
          content: {}
          description: Not authorized to retrieve Chapters for this Bible
        "404":
          content: {}
          description: Chapter not found
      tags:
      - Chapters
      x-accepts: '*/*'
components:
  parameters:
    includeChapters:
      description: |
        Boolean indicating if an array of chapter summaries should be
        included in the results. Defaults to false.
      in: query
      name: include-chapters
      schema:
        type: boolean
    includeChaptersAndSections:
      description: |
        Boolean indicating if an array of chapter summaries and an array
        of sections should be included in the results. Defaults to false.
      in: query
      name: include-chapters-and-sections
      schema:
        type: boolean
    parallels:
      description: Comma delimited list of bibleIds to include
      in: query
      name: parallels
      schema:
        type: string
    contentType:
      description: Content type to be returned in the content property.  Supported
        values are `html` (default), `json` (beta), and `text` (beta)
      in: query
      name: content-type
      schema:
        default: html
        enum:
        - html
        - json
        - text
        type: string
    footnotes:
      description: Include footnotes in content
      in: query
      name: include-notes
      schema:
        default: false
        type: boolean
    sectionTitles:
      description: Include section titles in content
      in: query
      name: include-titles
      schema:
        default: true
        type: boolean
    chapterNumbers:
      description: Include chapter numbers in content
      in: query
      name: include-chapter-numbers
      schema:
        default: false
        type: boolean
    verseSpans:
      description: Include spans that wrap verse numbers and verse text for bible
        content.
      in: query
      name: include-verse-spans
      schema:
        default: false
        type: boolean
    verseNumbers:
      description: Include verse numbers in content.
      in: query
      name: include-verse-numbers
      schema:
        default: true
        type: boolean
    useOrgId:
      description: Use the supplied id(s) to match the verseOrgId instead of the verseId
      in: query
      name: use-org-id
      schema:
        default: false
        type: boolean
  schemas:
    Meta:
      example:
        fumsId: fumsId
        fums: fums
        fumsNoScript: fumsNoScript
        fumsJs: fumsJs
        fumsJsInclude: fumsJsInclude
      properties:
        fums:
          type: string
        fumsId:
          type: string
        fumsJsInclude:
          type: string
        fumsJs:
          type: string
        fumsNoScript:
          type: string
      required:
      - fums
      - fumsId
      - fumsJs
      - fumsJsInclude
      - fumsNoScript
      type: object
    BibleSummary:
      example:
        descriptionLocal: descriptionLocal
        dblId: dblId
        abbreviationLocal: abbreviationLocal
        description: description
        language:
          scriptDirection: scriptDirection
          name: name
          id: id
          nameLocal: nameLocal
          script: script
        countries:
        - name: name
          id: id
          nameLocal: nameLocal
        - name: name
          id: id
          nameLocal: nameLocal
        abbreviation: abbreviation
        type: type
        audioBibles:
        - descriptionLocal: descriptionLocal
          name: name
          description: description
          id: id
          nameLocal: nameLocal
        - descriptionLocal: descriptionLocal
          name: name
          description: description
          id: id
          nameLocal: nameLocal
        name: name
        id: id
        relatedDbl: relatedDbl
        nameLocal: nameLocal
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        dblId:
          type: string
        abbreviation:
          type: string
        abbreviationLocal:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        countries:
          items:
            $ref: '#/components/schemas/BibleSummary_countries'
          type: array
        name:
          type: string
        nameLocal:
          type: string
        description:
          type: string
        descriptionLocal:
          type: string
        relatedDbl:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        audioBibles:
          items:
            $ref: '#/components/schemas/AudioBibleSummary'
          type: array
      required:
      - abbreviation
      - abbreviationLocal
      - countries
      - dblId
      - description
      - descriptionLocal
      - id
      - language
      - name
      - nameLocal
      - relatedDbl
      - type
      - updatedAt
      type: object
    AudioBibleSummary:
      example:
        descriptionLocal: descriptionLocal
        name: name
        description: description
        id: id
        nameLocal: nameLocal
      properties:
        id:
          type: string
        name:
          type: string
        nameLocal:
          type: string
        description:
          type: string
        descriptionLocal:
          type: string
      required:
      - description
      - descriptionLocal
      - id
      - name
      - nameLocal
      type: object
    Bible:
      example:
        copyright: copyright
        descriptionLocal: descriptionLocal
        dblId: dblId
        abbreviationLocal: abbreviationLocal
        description: description
        language:
          scriptDirection: scriptDirection
          name: name
          id: id
          nameLocal: nameLocal
          script: script
        countries:
        - name: name
          id: id
          nameLocal: nameLocal
        - name: name
          id: id
          nameLocal: nameLocal
        abbreviation: abbreviation
        type: type
        audioBibles:
        - descriptionLocal: descriptionLocal
          name: name
          description: description
          id: id
          nameLocal: nameLocal
        - descriptionLocal: descriptionLocal
          name: name
          description: description
          id: id
          nameLocal: nameLocal
        name: name
        id: id
        relatedDbl: relatedDbl
        nameLocal: nameLocal
        info: info
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        dblId:
          type: string
        abbreviation:
          type: string
        abbreviationLocal:
          type: string
        copyright:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        countries:
          items:
            $ref: '#/components/schemas/BibleSummary_countries'
          type: array
        name:
          type: string
        nameLocal:
          type: string
        description:
          type: string
        descriptionLocal:
          type: string
        info:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        relatedDbl:
          type: string
        audioBibles:
          items:
            $ref: '#/components/schemas/AudioBibleSummary'
          type: array
      required:
      - abbreviation
      - abbreviationLocal
      - audioBibles
      - copyright
      - countries
      - dblId
      - description
      - descriptionLocal
      - id
      - info
      - language
      - name
      - nameLocal
      - relatedDbl
      - type
      - updatedAt
      type: object
    Book:
      example:
        chapters:
        - reference: reference
          number: number
          bibleId: bibleId
          id: id
          bookId: bookId
        - reference: reference
          number: number
          bibleId: bibleId
          id: id
          bookId: bookId
        nameLong: nameLong
        bibleId: bibleId
        name: name
        id: id
        abbreviation: abbreviation
      properties:
        id:
          type: string
        bibleId:
          type: string
        abbreviation:
          type: string
        name:
          type: string
        nameLong:
          type: string
        chapters:
          items:
            $ref: '#/components/schemas/ChapterSummary'
          type: array
      required:
      - abbreviation
      - bibleId
      - id
      - name
      - nameLong
      type: object
    ChapterSummary:
      example:
        reference: reference
        number: number
        bibleId: bibleId
        id: id
        bookId: bookId
      properties:
        id:
          type: string
        bibleId:
          type: string
        number:
          type: string
        bookId:
          type: string
        reference:
          type: string
      required:
      - bibleId
      - bookId
      - id
      - number
      - reference
      type: object
    Chapter:
      example:
        reference: reference
        verseCount: 0
        next:
          number: number
          id: id
          bookId: bookId
        number: number
        copyright: copyright
        previous:
          number: number
          id: id
          bookId: bookId
        bibleId: bibleId
        id: id
        content: content
        bookId: bookId
      properties:
        id:
          type: string
        bibleId:
          type: string
        number:
          type: string
        bookId:
          type: string
        content:
          type: string
        reference:
          type: string
        verseCount:
          type: integer
        next:
          $ref: '#/components/schemas/Chapter_next'
        previous:
          $ref: '#/components/schemas/Chapter_next'
        copyright:
          type: string
      required:
      - bibleId
      - bookId
      - content
      - copyright
      - id
      - number
      - reference
      - verseCount
      type: object
    Language:
      example:
        scriptDirection: scriptDirection
        name: name
        id: id
        nameLocal: nameLocal
        script: script
      properties:
        id:
          type: string
        name:
          type: string
        nameLocal:
          type: string
        script:
          type: string
        scriptDirection:
          type: string
      required:
      - id
      - name
      - nameLocal
      - script
      - scriptDirection
      type: object
    Passage:
      example:
        reference: reference
        verseCount: 0
        copyright: copyright
        bibleId: bibleId
        id: id
        orgId: orgId
        content: content
      properties:
        id:
          type: string
        bibleId:
          type: string
        orgId:
          type: string
        content:
          type: string
        reference:
          type: string
        verseCount:
          type: integer
        copyright:
          type: string
      required:
      - bibleId
      - content
      - copyright
      - id
      - orgId
      - reference
      - verseCount
      type: object
    Verse:
      example:
        reference: reference
        verseCount: 0
        next:
          id: id
          bookId: bookId
        copyright: copyright
        previous:
          id: id
          bookId: bookId
        chapterId: chapterId
        bibleId: bibleId
        id: id
        orgId: orgId
        content: content
        bookId: bookId
      properties:
        id:
          type: string
        orgId:
          type: string
        bibleId:
          type: string
        bookId:
          type: string
        chapterId:
          type: string
        content:
          type: string
        reference:
          type: string
        verseCount:
          type: integer
        copyright:
          type: string
        next:
          $ref: '#/components/schemas/Verse_next'
        previous:
          $ref: '#/components/schemas/Verse_next'
      required:
      - bibleId
      - bookId
      - chapterId
      - content
      - copyright
      - id
      - orgId
      - reference
      - verseCount
      type: object
    SectionSummary:
      example:
        bibleId: bibleId
        lastVerseId: lastVerseId
        id: id
        firstVerseOrgId: firstVerseOrgId
        lastVerseOrgId: lastVerseOrgId
        title: title
        firstVerseId: firstVerseId
        bookId: bookId
      properties:
        id:
          type: string
        bibleId:
          type: string
        bookId:
          type: string
        title:
          type: string
        firstVerseId:
          type: string
        lastVerseId:
          type: string
        firstVerseOrgId:
          type: string
        lastVerseOrgId:
          type: string
      required:
      - bibleId
      - bookId
      - firstVerseId
      - firstVerseOrgId
      - id
      - lastVerseId
      - lastVerseOrgId
      - title
      type: object
    Section:
      example:
        next:
          id: id
          title: title
        copyright: copyright
        previous:
          id: id
          title: title
        bibleId: bibleId
        firstVerseOrgId: firstVerseOrgId
        lastVerseOrgId: lastVerseOrgId
        title: title
        content: content
        bookId: bookId
        verseCount: 0
        chapterId: chapterId
        lastVerseId: lastVerseId
        id: id
        firstVerseId: firstVerseId
      properties:
        id:
          type: string
        bibleId:
          type: string
        bookId:
          type: string
        chapterId:
          type: string
        title:
          type: string
        content:
          type: string
        verseCount:
          type: integer
        firstVerseId:
          type: string
        lastVerseId:
          type: string
        firstVerseOrgId:
          type: string
        lastVerseOrgId:
          type: string
        copyright:
          type: string
        next:
          $ref: '#/components/schemas/Section_next'
        previous:
          $ref: '#/components/schemas/Section_next'
      required:
      - bibleId
      - bookId
      - chapterId
      - content
      - copyright
      - firstVerseId
      - firstVerseOrgId
      - id
      - lastVerseId
      - lastVerseOrgId
      - title
      - verseCount
      type: object
    VerseSummary:
      example:
        reference: reference
        chapterId: chapterId
        bibleId: bibleId
        id: id
        orgId: orgId
        bookId: bookId
      properties:
        id:
          type: string
        orgId:
          type: string
        bibleId:
          type: string
        bookId:
          type: string
        chapterId:
          type: string
        reference:
          type: string
      required:
      - bibleId
      - bookId
      - chapterId
      - id
      - orgId
      - reference
      type: object
    SearchVerse:
      example:
        reference: reference
        chapterId: chapterId
        bibleId: bibleId
        id: id
        text: text
        orgId: orgId
        bookId: bookId
      properties:
        id:
          type: string
        orgId:
          type: string
        bibleId:
          type: string
        bookId:
          type: string
        chapterId:
          type: string
        text:
          type: string
        reference:
          type: string
      required:
      - bibleId
      - bookId
      - chapterId
      - id
      - orgId
      - text
      type: object
    SearchResponse:
      example:
        verseCount: 5
        total: 1
        offset: 6
        query: query
        limit: 0
        passages:
        - reference: reference
          verseCount: 0
          copyright: copyright
          bibleId: bibleId
          id: id
          orgId: orgId
          content: content
        - reference: reference
          verseCount: 0
          copyright: copyright
          bibleId: bibleId
          id: id
          orgId: orgId
          content: content
        verses:
        - reference: reference
          chapterId: chapterId
          bibleId: bibleId
          id: id
          text: text
          orgId: orgId
          bookId: bookId
        - reference: reference
          chapterId: chapterId
          bibleId: bibleId
          id: id
          text: text
          orgId: orgId
          bookId: bookId
      properties:
        query:
          type: string
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        verseCount:
          type: integer
        verses:
          items:
            $ref: '#/components/schemas/SearchVerse'
          type: array
        passages:
          items:
            $ref: '#/components/schemas/Passage'
          type: array
      required:
      - limit
      - offset
      - query
      - total
      - verseCount
      - verses
      type: object
    AudioBible:
      example:
        copyright: copyright
        descriptionLocal: descriptionLocal
        dblId: dblId
        abbreviationLocal: abbreviationLocal
        description: description
        language:
          scriptDirection: scriptDirection
          name: name
          id: id
          nameLocal: nameLocal
          script: script
        countries:
        - name: name
          id: id
          nameLocal: nameLocal
        - name: name
          id: id
          nameLocal: nameLocal
        abbreviation: abbreviation
        type: type
        name: name
        id: id
        relatedDbl: relatedDbl
        nameLocal: nameLocal
        info: info
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        dblId:
          type: string
        abbreviation:
          type: string
        abbreviationLocal:
          type: string
        copyright:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        countries:
          items:
            $ref: '#/components/schemas/BibleSummary_countries'
          type: array
        name:
          type: string
        nameLocal:
          type: string
        description:
          type: string
        descriptionLocal:
          type: string
        info:
          type: string
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
        relatedDbl:
          type: string
      required:
      - abbreviation
      - abbreviationLocal
      - copyright
      - countries
      - dblId
      - description
      - descriptionLocal
      - id
      - info
      - language
      - name
      - nameLocal
      - relatedDbl
      - type
      - updatedAt
      type: object
    AudioChapter:
      example:
        reference: reference
        next:
          number: number
          id: id
          bookId: bookId
        number: number
        copyright: copyright
        resourceUrl: resourceUrl
        previous:
          number: number
          id: id
          bookId: bookId
        bibleId: bibleId
        id: id
        timecodes:
        - verseId: verseId
          start: start
          end: end
        - verseId: verseId
          start: start
          end: end
        expiresAt: 0
        bookId: bookId
      properties:
        id:
          type: string
        bibleId:
          type: string
        number:
          type: string
        bookId:
          type: string
        resourceUrl:
          type: string
        timecodes:
          items:
            $ref: '#/components/schemas/AudioChapter_timecodes'
          type: array
        expiresAt:
          type: integer
        reference:
          type: string
        next:
          $ref: '#/components/schemas/Chapter_next'
        previous:
          $ref: '#/components/schemas/Chapter_next'
        copyright:
          type: string
      required:
      - bibleId
      - bookId
      - expiresAt
      - id
      - number
      - reference
      - resourceUrl
      type: object
    inline_response_200:
      example:
        data:
        - descriptionLocal: descriptionLocal
          dblId: dblId
          abbreviationLocal: abbreviationLocal
          description: description
          language:
            scriptDirection: scriptDirection
            name: name
            id: id
            nameLocal: nameLocal
            script: script
          countries:
          - name: name
            id: id
            nameLocal: nameLocal
          - name: name
            id: id
            nameLocal: nameLocal
          abbreviation: abbreviation
          type: type
          audioBibles:
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          name: name
          id: id
          relatedDbl: relatedDbl
          nameLocal: nameLocal
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - descriptionLocal: descriptionLocal
          dblId: dblId
          abbreviationLocal: abbreviationLocal
          description: description
          language:
            scriptDirection: scriptDirection
            name: name
            id: id
            nameLocal: nameLocal
            script: script
          countries:
          - name: name
            id: id
            nameLocal: nameLocal
          - name: name
            id: id
            nameLocal: nameLocal
          abbreviation: abbreviation
          type: type
          audioBibles:
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          name: name
          id: id
          relatedDbl: relatedDbl
          nameLocal: nameLocal
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/BibleSummary'
          type: array
      required:
      - data
      type: object
    inline_response_200_1:
      example:
        data:
          copyright: copyright
          descriptionLocal: descriptionLocal
          dblId: dblId
          abbreviationLocal: abbreviationLocal
          description: description
          language:
            scriptDirection: scriptDirection
            name: name
            id: id
            nameLocal: nameLocal
            script: script
          countries:
          - name: name
            id: id
            nameLocal: nameLocal
          - name: name
            id: id
            nameLocal: nameLocal
          abbreviation: abbreviation
          type: type
          audioBibles:
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          - descriptionLocal: descriptionLocal
            name: name
            description: description
            id: id
            nameLocal: nameLocal
          name: name
          id: id
          relatedDbl: relatedDbl
          nameLocal: nameLocal
          info: info
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Bible'
      required:
      - data
      type: object
    inline_response_200_2:
      example:
        data:
        - chapters:
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          nameLong: nameLong
          bibleId: bibleId
          name: name
          id: id
          abbreviation: abbreviation
        - chapters:
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          nameLong: nameLong
          bibleId: bibleId
          name: name
          id: id
          abbreviation: abbreviation
      properties:
        data:
          items:
            $ref: '#/components/schemas/Book'
          type: array
      required:
      - data
      type: object
    inline_response_200_3:
      example:
        data:
          chapters:
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          - reference: reference
            number: number
            bibleId: bibleId
            id: id
            bookId: bookId
          nameLong: nameLong
          bibleId: bibleId
          name: name
          id: id
          abbreviation: abbreviation
      properties:
        data:
          $ref: '#/components/schemas/Book'
      required:
      - data
      type: object
    inline_response_200_4:
      example:
        data:
        - reference: reference
          number: number
          bibleId: bibleId
          id: id
          bookId: bookId
        - reference: reference
          number: number
          bibleId: bibleId
          id: id
          bookId: bookId
      properties:
        data:
          items:
            $ref: '#/components/schemas/ChapterSummary'
          type: array
      required:
      - data
      type: object
    inline_response_200_5:
      example:
        data:
          reference: reference
          verseCount: 0
          next:
            number: number
            id: id
            bookId: bookId
          number: number
          copyright: copyright
          previous:
            number: number
            id: id
            bookId: bookId
          bibleId: bibleId
          id: id
          content: content
          bookId: bookId
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
      properties:
        data:
          $ref: '#/components/schemas/Chapter'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    inline_response_200_6:
      example:
        data:
          reference: reference
          verseCount: 0
          copyright: copyright
          bibleId: bibleId
          id: id
          orgId: orgId
          content: content
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
      properties:
        data:
          $ref: '#/components/schemas/Passage'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    inline_response_200_7:
      example:
        data:
        - bibleId: bibleId
          lastVerseId: lastVerseId
          id: id
          firstVerseOrgId: firstVerseOrgId
          lastVerseOrgId: lastVerseOrgId
          title: title
          firstVerseId: firstVerseId
          bookId: bookId
        - bibleId: bibleId
          lastVerseId: lastVerseId
          id: id
          firstVerseOrgId: firstVerseOrgId
          lastVerseOrgId: lastVerseOrgId
          title: title
          firstVerseId: firstVerseId
          bookId: bookId
      properties:
        data:
          items:
            $ref: '#/components/schemas/SectionSummary'
          type: array
      required:
      - data
      type: object
    inline_response_200_8:
      example:
        data:
          next:
            id: id
            title: title
          copyright: copyright
          previous:
            id: id
            title: title
          bibleId: bibleId
          firstVerseOrgId: firstVerseOrgId
          lastVerseOrgId: lastVerseOrgId
          title: title
          content: content
          bookId: bookId
          verseCount: 0
          chapterId: chapterId
          lastVerseId: lastVerseId
          id: id
          firstVerseId: firstVerseId
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
      properties:
        data:
          $ref: '#/components/schemas/Section'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    inline_response_200_9:
      example:
        data:
        - reference: reference
          chapterId: chapterId
          bibleId: bibleId
          id: id
          orgId: orgId
          bookId: bookId
        - reference: reference
          chapterId: chapterId
          bibleId: bibleId
          id: id
          orgId: orgId
          bookId: bookId
      properties:
        data:
          items:
            $ref: '#/components/schemas/VerseSummary'
          type: array
      required:
      - data
      type: object
    inline_response_200_10:
      example:
        data:
          reference: reference
          verseCount: 0
          next:
            id: id
            bookId: bookId
          copyright: copyright
          previous:
            id: id
            bookId: bookId
          chapterId: chapterId
          bibleId: bibleId
          id: id
          orgId: orgId
          content: content
          bookId: bookId
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
      properties:
        data:
          $ref: '#/components/schemas/Verse'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    inline_response_200_11:
      example:
        data:
          verseCount: 5
          total: 1
          offset: 6
          query: query
          limit: 0
          passages:
          - reference: reference
            verseCount: 0
            copyright: copyright
            bibleId: bibleId
            id: id
            orgId: orgId
            content: content
          - reference: reference
            verseCount: 0
            copyright: copyright
            bibleId: bibleId
            id: id
            orgId: orgId
            content: content
          verses:
          - reference: reference
            chapterId: chapterId
            bibleId: bibleId
            id: id
            text: text
            orgId: orgId
            bookId: bookId
          - reference: reference
            chapterId: chapterId
            bibleId: bibleId
            id: id
            text: text
            orgId: orgId
            bookId: bookId
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
        query: query
      properties:
        query:
          type: string
        data:
          $ref: '#/components/schemas/SearchResponse'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    inline_response_200_12:
      example:
        data:
          copyright: copyright
          descriptionLocal: descriptionLocal
          dblId: dblId
          abbreviationLocal: abbreviationLocal
          description: description
          language:
            scriptDirection: scriptDirection
            name: name
            id: id
            nameLocal: nameLocal
            script: script
          countries:
          - name: name
            id: id
            nameLocal: nameLocal
          - name: name
            id: id
            nameLocal: nameLocal
          abbreviation: abbreviation
          type: type
          name: name
          id: id
          relatedDbl: relatedDbl
          nameLocal: nameLocal
          info: info
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/AudioBible'
      required:
      - data
      type: object
    inline_response_200_13:
      example:
        data:
          reference: reference
          next:
            number: number
            id: id
            bookId: bookId
          number: number
          copyright: copyright
          resourceUrl: resourceUrl
          previous:
            number: number
            id: id
            bookId: bookId
          bibleId: bibleId
          id: id
          timecodes:
          - verseId: verseId
            start: start
            end: end
          - verseId: verseId
            start: start
            end: end
          expiresAt: 0
          bookId: bookId
        meta:
          fumsId: fumsId
          fums: fums
          fumsNoScript: fumsNoScript
          fumsJs: fumsJs
          fumsJsInclude: fumsJsInclude
      properties:
        data:
          $ref: '#/components/schemas/AudioChapter'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta
      type: object
    BibleSummary_countries:
      example:
        name: name
        id: id
        nameLocal: nameLocal
      properties:
        id:
          type: string
        name:
          type: string
        nameLocal:
          type: string
      required:
      - id
      - name
      - nameLocal
      type: object
    Chapter_next:
      example:
        number: number
        id: id
        bookId: bookId
      properties:
        id:
          type: string
        bookId:
          type: string
        number:
          type: string
      type: object
    Verse_next:
      example:
        id: id
        bookId: bookId
      properties:
        id:
          type: string
        bookId:
          type: string
      type: object
    Section_next:
      example:
        id: id
        title: title
      properties:
        id:
          type: string
        title:
          type: string
      type: object
    AudioChapter_timecodes:
      example:
        verseId: verseId
        start: start
        end: end
      properties:
        end:
          type: string
        start:
          type: string
        verseId:
          type: string
      required:
      - end
      - start
      - verseId
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: api-key
      type: apiKey
      x-data-threescale-name: user_keys
x-original-swagger-version: "2.0"

