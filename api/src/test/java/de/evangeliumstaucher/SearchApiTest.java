/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher;

import de.evangeliumstaucher.invoker.ApiException;
import de.evangeliumstaucher.model.InlineResponse20011;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Ignore
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    
    /**
     * 
     *
     * Gets search results for a given &#x60;bibleId&#x60; and query string.  Searches will match all verses with the list of keywords provided in the query string. Order of the keywords does not matter. However all keywords must be present in a verse for it to be considered a match. The total number of results returned from a search can be limited by populating the &#x60;limit&#x60; attribute in the query string with a non-negative integer value.  If no limit value is provide a default of 10 is used. &#x60;offset&#x60; can be used to traverse paginated results.  So for example if you are using the default &#x60;limit&#x60; of 10, using an &#x60;offset&#x60; of 10 will return the second page of results, namely results 11-20. The &#x60;text&#x60; property of each verse object contains only the verse text.  It does not contain footnote references. However, those can be queried directly using the &#x60;/bibles/{bibleId}/verses/{verseId}&#x60; endpoint. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchBibleTest() throws ApiException {
        String bibleId = null;
        String query = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        String range = null;
        String fuzziness = null;
                InlineResponse20011 response = api.searchBible(bibleId, query, limit, offset, sort, range, fuzziness);
        // TODO: test validations
    }
    
}
