/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher;

import de.evangeliumstaucher.invoker.ApiException;
import de.evangeliumstaucher.model.InlineResponse20013;
import de.evangeliumstaucher.model.InlineResponse2004;
import de.evangeliumstaucher.model.InlineResponse2005;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChaptersApi
 */
@Ignore
public class ChaptersApiTest {

    private final ChaptersApi api = new ChaptersApi();

    
    /**
     * 
     *
     * Gets a single &#x60;Chapter&#x60; object for a given &#x60;audioBibleId&#x60; and &#x60;chapterId&#x60;. This AudioChapter object also includes an &#x60;resourceUrl&#x60; property with a HTTP URL to the mp3 audio resource for the chapter.  The &#x60;resourceUrl&#x60; is unique per request and expires in XX minutes.  The &#x60;expiresAt&#x60; property provides the Unix time value of &#x60;resourceUrl&#x60; expiration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAudioChapterTest() throws ApiException {
        String audioBibleId = null;
        String chapterId = null;
                InlineResponse20013 response = api.getAudioChapter(audioBibleId, chapterId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets an array of &#x60;Chapter&#x60; objects for a given &#x60;audioBibleId&#x60; and &#x60;bookId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAudioChaptersTest() throws ApiException {
        String audioBibleId = null;
        String bookId = null;
                InlineResponse2004 response = api.getAudioChapters(audioBibleId, bookId);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a single &#x60;Chapter&#x60; object for a given &#x60;bibleId&#x60; and &#x60;chapterId&#x60;. This Chapter object also includes an &#x60;content&#x60; property with all verses for the Chapter. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChapterTest() throws ApiException {
        String bibleId = null;
        String chapterId = null;
        String contentType = null;
        Boolean includeNotes = null;
        Boolean includeTitles = null;
        Boolean includeChapterNumbers = null;
        Boolean includeVerseNumbers = null;
        Boolean includeVerseSpans = null;
        String parallels = null;
                InlineResponse2005 response = api.getChapter(bibleId, chapterId, contentType, includeNotes, includeTitles, includeChapterNumbers, includeVerseNumbers, includeVerseSpans, parallels);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets an array of &#x60;Chapter&#x60; objects for a given &#x60;bibleId&#x60; and &#x60;bookId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChaptersTest() throws ApiException {
        String bibleId = null;
        String bookId = null;
                InlineResponse2004 response = api.getChapters(bibleId, bookId);
        // TODO: test validations
    }
    
}
