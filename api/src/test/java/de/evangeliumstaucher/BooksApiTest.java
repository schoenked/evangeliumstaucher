/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher;

import de.evangeliumstaucher.invoker.ApiException;
import de.evangeliumstaucher.model.InlineResponse2002;
import de.evangeliumstaucher.model.InlineResponse2003;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BooksApi
 */
@Ignore
public class BooksApiTest {

    private final BooksApi api = new BooksApi();

    
    /**
     * 
     *
     * Gets a single &#x60;Book&#x60; object for a given &#x60;audioBibleId&#x60; and &#x60;bookId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAudioBookTest() throws ApiException {
        String audioBibleId = null;
        String bookId = null;
        Boolean includeChapters = null;
                InlineResponse2003 response = api.getAudioBook(audioBibleId, bookId, includeChapters);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets an array of &#x60;Book&#x60; objects for a given &#x60;audioBibleId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAudioBooksTest() throws ApiException {
        String audioBibleId = null;
        Boolean includeChapters = null;
        Boolean includeChaptersAndSections = null;
                InlineResponse2002 response = api.getAudioBooks(audioBibleId, includeChapters, includeChaptersAndSections);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets a single &#x60;Book&#x60; object for a given &#x60;bibleId&#x60; and &#x60;bookId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBookTest() throws ApiException {
        String bibleId = null;
        String bookId = null;
        Boolean includeChapters = null;
                InlineResponse2003 response = api.getBook(bibleId, bookId, includeChapters);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets an array of &#x60;Book&#x60; objects for a given &#x60;bibleId&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBooksTest() throws ApiException {
        String bibleId = null;
        Boolean includeChapters = null;
        Boolean includeChaptersAndSections = null;
                InlineResponse2002 response = api.getBooks(bibleId, includeChapters, includeChaptersAndSections);
        // TODO: test validations
    }
    
}
