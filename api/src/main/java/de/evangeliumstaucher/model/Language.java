/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Language
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-01T23:51:10.720725+01:00[Europe/Berlin]")
public class Language {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAME_LOCAL = "nameLocal";
  @SerializedName(SERIALIZED_NAME_NAME_LOCAL)
  private String nameLocal;

  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  private String script;

  public static final String SERIALIZED_NAME_SCRIPT_DIRECTION = "scriptDirection";
  @SerializedName(SERIALIZED_NAME_SCRIPT_DIRECTION)
  private String scriptDirection;

  public Language() { 
  }

  public Language id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Language name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Language nameLocal(String nameLocal) {
    
    this.nameLocal = nameLocal;
    return this;
  }

   /**
   * Get nameLocal
   * @return nameLocal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getNameLocal() {
    return nameLocal;
  }


  public void setNameLocal(String nameLocal) {
    this.nameLocal = nameLocal;
  }


  public Language script(String script) {
    
    this.script = script;
    return this;
  }

   /**
   * Get script
   * @return script
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getScript() {
    return script;
  }


  public void setScript(String script) {
    this.script = script;
  }


  public Language scriptDirection(String scriptDirection) {
    
    this.scriptDirection = scriptDirection;
    return this;
  }

   /**
   * Get scriptDirection
   * @return scriptDirection
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getScriptDirection() {
    return scriptDirection;
  }


  public void setScriptDirection(String scriptDirection) {
    this.scriptDirection = scriptDirection;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(this.id, language.id) &&
        Objects.equals(this.name, language.name) &&
        Objects.equals(this.nameLocal, language.nameLocal) &&
        Objects.equals(this.script, language.script) &&
        Objects.equals(this.scriptDirection, language.scriptDirection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, nameLocal, script, scriptDirection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Language {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameLocal: ").append(toIndentedString(nameLocal)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    scriptDirection: ").append(toIndentedString(scriptDirection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

