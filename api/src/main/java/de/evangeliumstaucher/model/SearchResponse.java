/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.evangeliumstaucher.model.Passage;
import de.evangeliumstaucher.model.SearchVerse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-01T23:51:10.720725+01:00[Europe/Berlin]")
public class SearchResponse {
  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_VERSE_COUNT = "verseCount";
  @SerializedName(SERIALIZED_NAME_VERSE_COUNT)
  private Integer verseCount;

  public static final String SERIALIZED_NAME_VERSES = "verses";
  @SerializedName(SERIALIZED_NAME_VERSES)
  private List<SearchVerse> verses = new ArrayList<>();

  public static final String SERIALIZED_NAME_PASSAGES = "passages";
  @SerializedName(SERIALIZED_NAME_PASSAGES)
  private List<Passage> passages = null;

  public SearchResponse() { 
  }

  public SearchResponse query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public SearchResponse limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public SearchResponse offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public SearchResponse total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  public SearchResponse verseCount(Integer verseCount) {
    
    this.verseCount = verseCount;
    return this;
  }

   /**
   * Get verseCount
   * @return verseCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getVerseCount() {
    return verseCount;
  }


  public void setVerseCount(Integer verseCount) {
    this.verseCount = verseCount;
  }


  public SearchResponse verses(List<SearchVerse> verses) {
    
    this.verses = verses;
    return this;
  }

  public SearchResponse addVersesItem(SearchVerse versesItem) {
    this.verses.add(versesItem);
    return this;
  }

   /**
   * Get verses
   * @return verses
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SearchVerse> getVerses() {
    return verses;
  }


  public void setVerses(List<SearchVerse> verses) {
    this.verses = verses;
  }


  public SearchResponse passages(List<Passage> passages) {
    
    this.passages = passages;
    return this;
  }

  public SearchResponse addPassagesItem(Passage passagesItem) {
    if (this.passages == null) {
      this.passages = new ArrayList<>();
    }
    this.passages.add(passagesItem);
    return this;
  }

   /**
   * Get passages
   * @return passages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Passage> getPassages() {
    return passages;
  }


  public void setPassages(List<Passage> passages) {
    this.passages = passages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponse searchResponse = (SearchResponse) o;
    return Objects.equals(this.query, searchResponse.query) &&
        Objects.equals(this.limit, searchResponse.limit) &&
        Objects.equals(this.offset, searchResponse.offset) &&
        Objects.equals(this.total, searchResponse.total) &&
        Objects.equals(this.verseCount, searchResponse.verseCount) &&
        Objects.equals(this.verses, searchResponse.verses) &&
        Objects.equals(this.passages, searchResponse.passages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, limit, offset, total, verseCount, verses, passages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponse {\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    verseCount: ").append(toIndentedString(verseCount)).append("\n");
    sb.append("    verses: ").append(toIndentedString(verses)).append("\n");
    sb.append("    passages: ").append(toIndentedString(passages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

