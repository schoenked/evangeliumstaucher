/*
 * API.Bible
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.evangeliumstaucher.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.evangeliumstaucher.model.ChapterSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Book
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-01T23:51:10.720725+01:00[Europe/Berlin]")
public class Book {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BIBLE_ID = "bibleId";
  @SerializedName(SERIALIZED_NAME_BIBLE_ID)
  private String bibleId;

  public static final String SERIALIZED_NAME_ABBREVIATION = "abbreviation";
  @SerializedName(SERIALIZED_NAME_ABBREVIATION)
  private String abbreviation;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAME_LONG = "nameLong";
  @SerializedName(SERIALIZED_NAME_NAME_LONG)
  private String nameLong;

  public static final String SERIALIZED_NAME_CHAPTERS = "chapters";
  @SerializedName(SERIALIZED_NAME_CHAPTERS)
  private List<ChapterSummary> chapters = null;

  public Book() { 
  }

  public Book id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Book bibleId(String bibleId) {
    
    this.bibleId = bibleId;
    return this;
  }

   /**
   * Get bibleId
   * @return bibleId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBibleId() {
    return bibleId;
  }


  public void setBibleId(String bibleId) {
    this.bibleId = bibleId;
  }


  public Book abbreviation(String abbreviation) {
    
    this.abbreviation = abbreviation;
    return this;
  }

   /**
   * Get abbreviation
   * @return abbreviation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getAbbreviation() {
    return abbreviation;
  }


  public void setAbbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
  }


  public Book name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Book nameLong(String nameLong) {
    
    this.nameLong = nameLong;
    return this;
  }

   /**
   * Get nameLong
   * @return nameLong
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getNameLong() {
    return nameLong;
  }


  public void setNameLong(String nameLong) {
    this.nameLong = nameLong;
  }


  public Book chapters(List<ChapterSummary> chapters) {
    
    this.chapters = chapters;
    return this;
  }

  public Book addChaptersItem(ChapterSummary chaptersItem) {
    if (this.chapters == null) {
      this.chapters = new ArrayList<>();
    }
    this.chapters.add(chaptersItem);
    return this;
  }

   /**
   * Get chapters
   * @return chapters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ChapterSummary> getChapters() {
    return chapters;
  }


  public void setChapters(List<ChapterSummary> chapters) {
    this.chapters = chapters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Book book = (Book) o;
    return Objects.equals(this.id, book.id) &&
        Objects.equals(this.bibleId, book.bibleId) &&
        Objects.equals(this.abbreviation, book.abbreviation) &&
        Objects.equals(this.name, book.name) &&
        Objects.equals(this.nameLong, book.nameLong) &&
        Objects.equals(this.chapters, book.chapters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bibleId, abbreviation, name, nameLong, chapters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Book {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bibleId: ").append(toIndentedString(bibleId)).append("\n");
    sb.append("    abbreviation: ").append(toIndentedString(abbreviation)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameLong: ").append(toIndentedString(nameLong)).append("\n");
    sb.append("    chapters: ").append(toIndentedString(chapters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

